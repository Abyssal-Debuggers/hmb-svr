name: Deploy

on:
  schedule:
    - cron: "0 7 * * 1-5" # UTC -> Asia/Seoul | 평일 저녁 4시
    - cron: "0 1 * * 0,6" # UTC -> Asia/Seoul | 주말 아침 10시
  workflow_dispatch:
    inputs:
      type:
        type: choice
        required: true
        default: latest
        description: "Versioning type"
        options:
          - "latest"
          - "manual"
      version:
        type: string
        required: false
        description: "Version to set"
# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  gke_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v1"
        with:
          workload_identity_provider: ${{ secrets.GKE_WORKLOAD_IDENTITY_PROVIDER}}
          service_account: ${{ secrets.GKE_SERVICE_ACCOUNT }}
      - name: "Setup Terraform"
        uses: hashicorp/setup-terraform@v2
      - name: "Setup GKE"
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: ${{ secrets.GKE_CLUSTER_NAME }}
          location: ${{ secrets.GKE_LOCATION }}
      - name: "Let Image-Version"
        id: image_version
        run: |
          if [[ "${{ inputs.type }}" == "manual" ]]; then
            echo "version=ghcr.io/abyssal-debuggers/hmb-svr:${{ inputs.version }}" >> "$GITHUB_OUTPUT"
          else
            echo "version=ghcr.io/abyssal-debuggers/hmb-svr:latest" >> "$GITHUB_OUTPUT"
          fi
      - name: "Setup Terraform variables"
        run: |
          echo 'gcp_project = "${{ secrets.GCP_PROJECT }}"'                           >> ./config.tfvars
          echo 'gcp_region = "${{ vars.GCP_REGION }}"'                                >> ./config.tfvars
          echo 'gcp_zone = "${{ vars.GCP_ZONE }}"'                                    >> ./config.tfvars

          echo "kubernetes_config_path = \"$KUBECONFIG\""                             >> ./config.tfvars
          echo "kubernetes_config_context = \"$(kubectl config current-context)\""    >> ./config.tfvars
          
          echo 'keycloak_admin_username = "${{ secrets.KEYCLOAK_ADMIN_USERNAME }}"'   >> ./config.tfvars
          echo 'keycloak_admin_password = "${{ secrets.KEYCLOAK_ADMIN_PASSWORD }}"'   >> ./config.tfvars
          
          echo 'postgres_host = "${{vars.POSTGRES_HOST}}"'                            >> ./config.tfvars
          echo 'postgres_port = ${{vars.POSTGRES_PORT}}'                              >> ./config.tfvars
          echo 'postgres_database = "${{ vars.POSTGRES_DATABASE }}"'                  >> ./config.tfvars
          echo 'postgres_username = "${{ secrets.POSTGRES_USERNAME }}"'               >> ./config.tfvars
          echo 'postgres_password = "${{ secrets.POSTGRES_PASSWORD }}"'               >> ./config.tfvars
          
          echo 'graphql_image = "${{ steps.image_version.outputs.version }}"'         >> ./config.tfvars
          
          echo 'graphql_static_ip_name = "${{ secrets.GRAPHQL_STATIC_IP_NAME }}"'     >> ./config.tfvars

      - name: "Terraform Apply"
        run: |
          # 
          cd .deploy
          #          
          terraform init
          terraform apply -var-file ../config.tfvars -auto-approve
